paste0("Richoux regular (", original_sizes["richoux-regular"], ")"),
paste0("Richoux strict (", original_sizes["richoux-strict"], ")")
)
)
annotation <- annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE]
annotation = annotation[unlist(lapply(annotation, function(x) !is.na2(x)))]
annotation = annotation[unlist(lapply(annotation, function(x) !pheatmap:::is.na2(x)))]
annotation
for (i in 1:length(annotation)) {if (!(names(annotation)[i] %in% names(annotation_colors))) {print(names(annotation)[i])}}
for (i in 1:length(annotation)) {if (!(names(annotation)[i] %in% names(c("huang_Original"="#E69F00","guo_Original"="#56B4E9", "du_Original"="#009E73",
"pan_Original"="#F0E442","richoux-regular_Original"="#0072B2","richoux-strict_Original"="#CC79A7")))) {print(names(annotation)[i])}}
annotation
names(annotation)
names(annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE])
annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE]
annotation = c(annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE]
Dataset)
annotation = c(annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE])
names(annotation)
annotation
browser()
pheatmap(t(result_mat[, 1:6]),
annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = c("huang_Original"="#E69F00","guo_Original"="#56B4E9", "du_Original"="#009E73",
"pan_Original"="#F0E442","richoux-regular_Original"="#0072B2","richoux-strict_Original"="#CC79A7"),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
filename = './heatmap_results_original_quer.png',
width=8,
height=4,
labels_row = c(paste0("Huang (", original_sizes["huang"], ")"),
paste0("Guo (", original_sizes["guo"], ")"),
paste0("Du (", original_sizes["du"], ")"),
paste0("Pan (", original_sizes["pan"], ")"),
paste0("Richoux regular (", original_sizes["richoux-regular"], ")"),
paste0("Richoux strict (", original_sizes["richoux-strict"], ")")
)
)
debugSource("~/PycharmProjects/PPIs_MA/visualizations/visualize_results.R")
annotation
annotation
ind
factor_colors[ind]
annotation_colors[[names(annotation)[i]]]
annotation_colors
list("Dataset" = c("huang_Original"="#E69F00","guo_Original"="#56B4E9", "du_Original"="#009E73",
"pan_Original"="#F0E442","richoux-regular_Original"="#0072B2","richoux-strict_Original"="#CC79A7"))
pheatmap(t(result_mat[, 1:6]),
annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list("Dataset" = c("huang_Original"="#E69F00","guo_Original"="#56B4E9", "du_Original"="#009E73",
"pan_Original"="#F0E442","richoux-regular_Original"="#0072B2","richoux-strict_Original"="#CC79A7")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
filename = './heatmap_results_original_quer.png',
width=8,
height=4,
labels_row = c(paste0("Huang (", original_sizes["huang"], ")"),
paste0("Guo (", original_sizes["guo"], ")"),
paste0("Du (", original_sizes["du"], ")"),
paste0("Pan (", original_sizes["pan"], ")"),
paste0("Richoux regular (", original_sizes["richoux-regular"], ")"),
paste0("Richoux strict (", original_sizes["richoux-strict"], ")")
)
)
annotation_row <- annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE]
annotation_row
newCols <- colorRampPalette(grDevices::rainbow(length(unique(anno$Dataset))))
newCols <- colorRampPalette(grDevices::rainbow(length(unique(annotation_row$Dataset))))
newCols
annoCol <- newCols(length(unique(annotation_row$Dataset)))
names(annoCol) <- unique(annotation_row$Dataset)
annoCol <- list(category = annoCol)
annoCol
pheatmap(t(result_mat[, 1:6]),
annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(category = c("huang_Original"="#E69F00","guo_Original"="#56B4E9", "du_Original"="#009E73",
"pan_Original"="#F0E442","richoux-regular_Original"="#0072B2","richoux-strict_Original"="#CC79A7")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
filename = './heatmap_results_original_quer.png',
width=8,
height=4,
labels_row = c(paste0("Huang (", original_sizes["huang"], ")"),
paste0("Guo (", original_sizes["guo"], ")"),
paste0("Du (", original_sizes["du"], ")"),
paste0("Pan (", original_sizes["pan"], ")"),
paste0("Richoux regular (", original_sizes["richoux-regular"], ")"),
paste0("Richoux strict (", original_sizes["richoux-strict"], ")")
)
)
pheatmap(t(result_mat[, 1:6]),
annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c("huang_Original"="#E69F00","guo_Original"="#56B4E9", "du_Original"="#009E73",
"pan_Original"="#F0E442","richoux-regular_Original"="#0072B2","richoux-strict_Original"="#CC79A7")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
filename = './heatmap_results_original_quer.png',
width=8,
height=4,
labels_row = c(paste0("Huang (", original_sizes["huang"], ")"),
paste0("Guo (", original_sizes["guo"], ")"),
paste0("Du (", original_sizes["du"], ")"),
paste0("Pan (", original_sizes["pan"], ")"),
paste0("Richoux regular (", original_sizes["richoux-regular"], ")"),
paste0("Richoux strict (", original_sizes["richoux-strict"], ")")
)
)
annoCol
list(Dataset = c("huang_Original"="#E69F00","guo_Original"="#56B4E9", "du_Original"="#009E73",
"pan_Original"="#F0E442","richoux-regular_Original"="#0072B2","richoux-strict_Original"="#CC79A7"))
pheatmap(t(result_mat[, 1:6]),
annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
filename = './heatmap_results_original_quer.png',
width=8,
height=4,
labels_row = c(paste0("Huang (", original_sizes["huang"], ")"),
paste0("Guo (", original_sizes["guo"], ")"),
paste0("Du (", original_sizes["du"], ")"),
paste0("Pan (", original_sizes["pan"], ")"),
paste0("Richoux regular (", original_sizes["richoux-regular"], ")"),
paste0("Richoux strict (", original_sizes["richoux-strict"], ")")
)
)
pheatmap(t(result_mat[, 7:12]),
annotation_row = annotation_col[annotation_col$Test == 'Rewired', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
filename = './heatmap_results_rewired_quer.png',
width=8,
height=4,
labels_row = c(paste0("Huang (", rewired_sizes["huang"], ")"),
paste0("Guo (", rewired_sizes["guo"], ")"),
paste0("Du (", rewired_sizes["du"], ")"),
paste0("Pan (", rewired_sizes["pan"], ")"),
paste0("Richoux regular (", rewired_sizes["richoux-regular"], ")"),
paste0("Richoux strict (", rewired_sizes["richoux-strict"], ")")
)
)
pheatmap(result_mat[, 13:ncol(result_mat)],
annotation_col = annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7"),
Test = c("Inter->Intra-1"="#888888", "Inter->Intra-0"="#44AA99", "Intra-0->Intra-1"="#661100")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 5,
display_numbers = TRUE,
filename = './heatmap_results_partitions.png',
width=8,
height=5,
labels_col = c(#partition both ->1
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition both -> 0
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition 0 -> 1
paste0("Huang (", partition_sizes["huang 0"], ")"),
paste0("Guo (", partition_sizes["guo 0"], ")"),
paste0("Du (", partition_sizes["du 0"], ")"),
paste0("Pan (", partition_sizes["pan 0"], ")"),
paste0("Richoux (", partition_sizes["richoux 0"], ")")
)
)
annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ]
pheatmap(result_mat[, 13:ncol(result_mat)],
annotation_col = annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7"),
Test = c(`Inter->Intra-1`="#888888", `Inter->Intra-0`="#44AA99", `Intra-0->Intra-1`="#661100")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 5,
display_numbers = TRUE,
filename = './heatmap_results_partitions.png',
width=8,
height=5,
labels_col = c(#partition both ->1
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition both -> 0
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition 0 -> 1
paste0("Huang (", partition_sizes["huang 0"], ")"),
paste0("Guo (", partition_sizes["guo 0"], ")"),
paste0("Du (", partition_sizes["du 0"], ")"),
paste0("Pan (", partition_sizes["pan 0"], ")"),
paste0("Richoux (", partition_sizes["richoux 0"], ")")
)
)
pheatmap(result_mat[, 13:ncol(result_mat)],
annotation_col = annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7"),
Test = c(evaluate("Inter->Intra-1")="#888888", evaluate("Inter->Intra-0")="#44AA99", evaluate("Intra-0->Intra-1")="#661100")),
pheatmap(result_mat[, 13:ncol(result_mat)],
annotation_col = annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7"),
Test = c(get("Inter->Intra-1")="#888888", get("Inter->Intra-0")="#44AA99", get("Intra-0->Intra-1")="#661100")),
pheatmap(result_mat[, 13:ncol(result_mat)],
annotation_col = annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7"),
Test = c("Inter->Intra-1"="#888888", "Inter->Intra-0"="#44AA99", "Intra-0->Intra-1"="#661100")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 5,
display_numbers = TRUE,
filename = './heatmap_results_partitions.png',
width=8,
height=5,
labels_col = c(#partition both ->1
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition both -> 0
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition 0 -> 1
paste0("Huang (", partition_sizes["huang 0"], ")"),
paste0("Guo (", partition_sizes["guo 0"], ")"),
paste0("Du (", partition_sizes["du 0"], ")"),
paste0("Pan (", partition_sizes["pan 0"], ")"),
paste0("Richoux (", partition_sizes["richoux 0"], ")")
)
)
list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7"),
Test = c("Inter->Intra-1"="#888888", "Inter->Intra-0"="#44AA99", "Intra-0->Intra-1"="#661100"))
unique(annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ]$Test)
pheatmap(result_mat[, 13:ncol(result_mat)],
annotation_col = annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux-Regular"="#0072B2","Richoux-Strict"="#CC79A7"),
Test = c("Inter->Intra-1"="#888888", "Inter->Intra-0"="#44AA99", "Intra-0->Intra-1"="#661100", "Original"="#CC6677", "Rewired"="#DDCC77")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 5,
display_numbers = TRUE,
filename = './heatmap_results_partitions.png',
width=8,
height=5,
labels_col = c(#partition both ->1
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition both -> 0
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition 0 -> 1
paste0("Huang (", partition_sizes["huang 0"], ")"),
paste0("Guo (", partition_sizes["guo 0"], ")"),
paste0("Du (", partition_sizes["du 0"], ")"),
paste0("Pan (", partition_sizes["pan 0"], ")"),
paste0("Richoux (", partition_sizes["richoux 0"], ")")
)
)
unique(annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ]$Dataset)
pheatmap(result_mat[, 13:ncol(result_mat)],
annotation_col = annotation_col[!annotation_col$Test %in% c('Original', 'Rewired'), ],
annotation_colors = list(Dataset = c("Huang"="#E69F00","Guo"="#56B4E9", "Du"="#009E73",
"Pan"="#F0E442","Richoux"="#0072B2"),
Test = c("Inter->Intra-1"="#888888", "Inter->Intra-0"="#44AA99", "Intra-0->Intra-1"="#661100")),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 5,
display_numbers = TRUE,
filename = './heatmap_results_partitions.png',
width=8,
height=5,
labels_col = c(#partition both ->1
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition both -> 0
paste0("Huang (", partition_sizes["huang both"], ")"),
paste0("Guo (", partition_sizes["guo both"], ")"),
paste0("Du (", partition_sizes["du both"], ")"),
paste0("Pan (", partition_sizes["pan both"], ")"),
paste0("Richoux (", partition_sizes["richoux both"], ")"),
#partition 0 -> 1
paste0("Huang (", partition_sizes["huang 0"], ")"),
paste0("Guo (", partition_sizes["guo 0"], ")"),
paste0("Du (", partition_sizes["du 0"], ")"),
paste0("Pan (", partition_sizes["pan 0"], ")"),
paste0("Richoux (", partition_sizes["richoux 0"], ")")
)
)
result_mart
result_mat
result_mat[, 13:ncol(result_mat)]
result_mat[, 'richoux_both->0']
result_mat[, 'richoux_both->0'] - result_mat[, 'richoux_both->1']
100 * (result_mat[, 'richoux_both->0'] - result_mat[, 'richoux_both->1'])
mean(100 * (result_mat[, 'richoux_both->0'] - result_mat[, 'richoux_both->1']))
mean((result_mat[, 'richoux_both->0'] - result_mat[, 'richoux_both->1']))
sd((result_mat[, 'richoux_both->0'] - result_mat[, 'richoux_both->1']))
library(data.table)
library(ggplot2)
library(RColorBrewer)
#### result prefixes
custom_res <- '../algorithms/Custom/results/'
deepFE_res <- '../algorithms/DeepFE-PPI/result/custom/'
deepPPI_res <- '../algorithms/DeepPPI/keras/results_custom/'
seqppi_res <- '../algorithms/seq_ppi/binary/model/lasagna/results/'
sprint_res <- '../algorithms/SPRINT/results/'
#### time files
all_times <- data.table(Test = character(), Model=character(), Dataset=character(), `Time [s]`=numeric())
# custom
custom_times <- lapply(paste0(custom_res, list.files(custom_res, pattern='time*')), fread)
file_names <- tstrsplit(list.files(custom_res, pattern='time*'), '.txt', keep=1)[[1]]
file_names[grepl('richoux_regular', file_names, fixed=TRUE)] <- gsub('richoux_regular', 'Richoux-Regular', file_names[grepl('richoux_regular', file_names, fixed=TRUE)])
file_names[grepl('richoux_strict', file_names, fixed=TRUE)] <- gsub('richoux_strict', 'Richoux-Strict', file_names[grepl('richoux_strict', file_names, fixed=TRUE)])
file_names <- tstrsplit(file_names, '_', keep=c(2, 3, 4))
names(custom_times) <- paste(file_names[[1]], file_names[[2]], file_names[[3]], sep='_')
custom_times_df <- rbindlist(custom_times[!grepl('partition', names(custom_times), fixed=TRUE)], idcol = 'filename')
partition_times_df <- rbindlist(custom_times[grepl('partition', names(custom_times), fixed=TRUE)], idcol = 'filename')
custom_times_df <- custom_times_df[, c('test', 'dataset', 'encoding') := tstrsplit(filename, '_')]
partition_times_df <- partition_times_df[, c('test', 'dataset', 'encoding') := tstrsplit(filename, '_')]
names(custom_times_df) <- c('Filename', 'Algorithm', 'Time [s]', 'Test', 'Dataset', 'Encoding')
names(partition_times_df) <- c('Filename', 'Part_Train', 'Part_Test', 'Algorithm', 'Time [s]', 'Test', 'Dataset', 'Encoding')
custom_times_df$Part_Train <- NA
custom_times_df$Part_Test <- NA
custom_times_df[, Model := paste(Algorithm, Encoding, sep='_')]
partition_times_df[, Model := paste(Algorithm, Encoding, Part_Train, Part_Test, sep='_')]
all_times_custom <- rbind(custom_times_df, partition_times_df)
fwrite(all_times_custom, '../algorithms/Custom/results/run_t.csv')
all_times <- rbind(all_times, all_times_custom[, c('Test', 'Model', 'Dataset','Time [s]')])
# deepFE
deepFE_times <- lapply(paste0(deepFE_res, list.files(deepFE_res, pattern = 'time*', recursive = TRUE)), fread)
file_names <- tstrsplit(basename(list.files(deepFE_res, pattern = 'time*', recursive = TRUE)), '.txt', keep=1)[[1]]
file_names[grepl('richoux_regular', file_names, fixed=TRUE)] <- gsub('richoux_regular', 'Richoux-Regular', file_names[grepl('richoux_regular', file_names, fixed=TRUE)])
file_names[grepl('richoux_strict', file_names, fixed=TRUE)] <- gsub('richoux_strict', 'Richoux-Strict', file_names[grepl('richoux_strict', file_names, fixed=TRUE)])
names(deepFE_times) <- file_names
deepFE_times <- rbindlist(deepFE_times, idcol='Filename')
deepFE_times <- deepFE_times[, c('Test', 'Dataset', 'Part_Train', 'Part_Test') := tstrsplit(Filename, '_', keep=c(2,3,4,5), fill = NA)]
deepFE_times <- deepFE_times[, Model := ifelse(is.na(Part_Train),
'DeepFE',
paste('DeepFE', Part_Train, Part_Test, sep='_'))]
colnames(deepFE_times) <-c('Filename', 'Time [s]', 'Test', 'Dataset', 'Part_Train', 'Part_Test', 'Model')
fwrite(deepFE_times, '../algorithms/DeepFE-PPI/result/custom/run_t.csv')
all_times <- rbind(all_times, deepFE_times[, c('Test', 'Model', 'Dataset', 'Time [s]')])
# deepPPI
deepPPI_times <- fread(paste0(deepPPI_res, 'all_times.txt'))
colnames(deepPPI_times) <- c('Filename', 'Time [s]')
deepPPI_times$Filename[grepl('richoux_regular', deepPPI_times$Filename, fixed=TRUE)] <- gsub('richoux_regular', 'Richoux-Regular', deepPPI_times$Filename[grepl('richoux_regular', deepPPI_times$Filename, fixed=TRUE)])
deepPPI_times$Filename[grepl('richoux_strict', deepPPI_times$Filename, fixed=TRUE)] <- gsub('richoux_strict', 'Richoux-Strict', deepPPI_times$Filename[grepl('richoux_strict', deepPPI_times$Filename, fixed=TRUE)])
deepPPI_times <- deepPPI_times[, c('Model', 'Test', 'Dataset', 'Part_Train', 'Part_Test') := tstrsplit(Filename, '_', fill=NA)]
deepPPI_times <- deepPPI_times[, Part_Train := tstrsplit(Part_Train, 'tr', keep = 2)]
deepPPI_times <- deepPPI_times[, Part_Test := tstrsplit(Part_Test, 'te', keep = 2)]
deepPPI_times <- deepPPI_times[, Model := ifelse(is.na(Part_Train),
paste0('Richoux-', Model),
paste('Richoux', Model, Part_Train, Part_Test, sep='-'))]
all_times <- rbind(all_times, deepPPI_times[,  c('Test', 'Model', 'Dataset', 'Time [s]')])
# seq_ppi
seq_ppi_times <-  fread(paste0(seqppi_res, 'all_times.txt'))
colnames(seq_ppi_times) <- c('Filename', 'Time [s]')
seq_ppi_times$Filename[grepl('richoux_regular', seq_ppi_times$Filename, fixed=TRUE)] <- gsub('richoux_regular', 'richoux-regular', seq_ppi_times$Filename[grepl('richoux_regular', seq_ppi_times$Filename, fixed=TRUE)])
seq_ppi_times$Filename[grepl('richoux_strict', seq_ppi_times$Filename, fixed=TRUE)] <- gsub('richoux_strict', 'richoux-strict', seq_ppi_times$Filename[grepl('richoux_strict', seq_ppi_times$Filename, fixed=TRUE)])
seq_ppi_times <- seq_ppi_times[, c('Test', 'Dataset', 'Part_Train', 'Part_Test') := tstrsplit(Filename, '_', fill=NA)]
seq_ppi_times <- seq_ppi_times[, Model := ifelse(is.na(Part_Train),
'PIPR',
paste('PIPR', Part_Train, Part_Test, sep='_'))]
all_times <- rbind(all_times, seq_ppi_times[, c('Test' ,'Model', 'Dataset', 'Time [s]')])
# SPRINT
sprint_times <- lapply(paste0(sprint_res, list.files(sprint_res, pattern = '*time*', recursive = TRUE)), function(x){
tmp <- fread(x, header=FALSE)
return(tmp[1,2])
})
sprint_times <- fread('../algorithms/SPRINT/results/run_t.csv')
all_times <- rbind(all_times, sprint_times[,  c('Test', 'Model', 'Dataset', 'Time [s]')])
all_times$Dataset <- stringr::str_to_title(all_times$Dataset)
all_times <- all_times[, Dataset := factor(Dataset,
levels = c("Huang", "Guo", "Du", "Pan", "Richoux-Regular", "Richoux-Strict", "Richoux"))]
##### original
# training data size
sprint_data_dir <- '../algorithms/SPRINT/data/original/'
training_files <- list.files(path=sprint_data_dir, pattern = 'train_pos')
train_sizes <- sapply(paste0(sprint_data_dir, training_files), function(x){
as.integer(system2("wc",
args = c("-l",
x,
" | awk '{print $1}'"),
stdout = TRUE)) * 2
}
)
training_files[grepl('richoux', training_files, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', training_files[grepl('richoux', training_files, fixed=TRUE)])
names(train_sizes) <- stringr::str_to_title(tstrsplit(training_files, '_', keep=1)[[1]])
#train_sizes <- prettyNum(train_sizes, big.mark = ',')
all_times_orig <- all_times[Test == 'original']
all_times_orig[, Model := gsub('RF_', 'RF ', Model)]
all_times_orig[, Model := gsub('SVM_', 'SVM ', Model)]
all_times_orig <- all_times_orig[, Model := factor(Model,
levels=c("RF PCA","SVM PCA", "RF MDS", "SVM MDS",
"RF node2vec",  "SVM node2vec", "SPRINT",
"Richoux-FC", "Richoux-LSTM",
"DeepFE", "PIPR"))]
all_times_orig[, n_train := train_sizes[as.character(Dataset)]]
# visualization
ggplot(all_times_orig, aes(x=n_train, y = `Time [s]`, color = Model, group=Model))+
geom_point(size=3)+
geom_line(size=2, alpha=0.5)+
scale_x_continuous(breaks = unique(all_times_orig$n_train),
labels = paste0(c('Huang (', 'Guo (', 'Du (', 'Pan (', 'Richoux Regular (', 'Richoux Strict ('),
unique(all_times_orig$n_train), rep(')', 6)),
guide = guide_axis(n.dodge = 2))+
labs(x = "Dataset (n training)", y = "Time [s]") +
geom_hline(yintercept = 1800, color='red') +
geom_hline(yintercept = 3600, color='red') +
geom_hline(yintercept = 7200, color='red') +
geom_text(aes(0, 1800, label = '30 min', vjust = -1, hjust=0), color='red') +
geom_text(aes(0, 3600, label = '1 h', vjust = -1, hjust=0), color='red') +
geom_text(aes(0, 7200, label = '2 h', vjust = -1, hjust=0), color='red') +
scale_color_manual(values = brewer.pal(12, "Paired")[-11])+
theme_bw()+
theme(text = element_text(size=20))
# without pipr
ggplot(all_times_orig[Model != "PIPR"], aes(x=n_train, y = `Time [s]`, color = Model, group=Model))+
geom_point(size=3)+
geom_line(size=2, alpha=0.5)+
scale_x_continuous(breaks = unique(all_times_orig$n_train),
labels = paste0(c('Huang (', 'Guo (', 'Du (', 'Pan (', 'Richoux Regular (', 'Richoux Strict ('),
unique(all_times_orig$n_train), rep(')', 6)),
guide = guide_axis(n.dodge = 2))+
labs(x = "Dataset (n training)", y = "Time [s]") +
geom_hline(yintercept = 1800, color='red') +
geom_hline(yintercept = 3600, color='red') +
geom_text(aes(0, 1800, label = '30 min', vjust = -1, hjust=0), color='red') +
geom_text(aes(0, 3600, label = '1 h', vjust = -1, hjust=0), color='red')+
scale_color_manual(values = brewer.pal(12, "Paired")[-c(11, 12)])+
theme_bw()+
theme(text = element_text(size=20))
library(data.table)
library(ggplot2)
library(RColorBrewer)
ggplot(all_times_orig, aes(x=n_train, y = `Time [s]`, color = Model, group=Model))+
geom_point(size=3)+
geom_line(size=2, alpha=0.5)+
scale_x_continuous(breaks = unique(all_times_orig$n_train),
labels = paste0(c('Huang (', 'Guo (', 'Du (', 'Pan (', 'Richoux Regular (', 'Richoux Strict ('),
unique(all_times_orig$n_train), rep(')', 6)),
guide = guide_axis(n.dodge = 2))+
labs(x = "Dataset (n training)", y = "Time [s]") +
geom_hline(yintercept = 1800, color='red') +
geom_hline(yintercept = 3600, color='red') +
geom_hline(yintercept = 7200, color='red') +
geom_text(aes(0, 1800, label = '30 min', vjust = -1, hjust=0), color='red') +
geom_text(aes(0, 3600, label = '1 h', vjust = -1, hjust=0), color='red') +
geom_text(aes(0, 7200, label = '2 h', vjust = -1, hjust=0), color='red') +
scale_color_manual(values = brewer.pal(12, "Paired")[-11])+
theme_bw()+
theme(text = element_text(size=20))
# without pipr
ggplot(all_times_orig[Model != "PIPR"], aes(x=n_train, y = `Time [s]`, color = Model, group=Model))+
geom_point(size=3)+
geom_line(size=2, alpha=0.5)+
scale_x_continuous(breaks = unique(all_times_orig$n_train),
labels = paste0(c('Huang (', 'Guo (', 'Du (', 'Pan (', 'Richoux Regular (', 'Richoux Strict ('),
unique(all_times_orig$n_train), rep(')', 6)),
guide = guide_axis(n.dodge = 2))+
labs(x = "Dataset (n training)", y = "Time [s]") +
geom_hline(yintercept = 1800, color='red') +
geom_hline(yintercept = 3600, color='red') +
geom_text(aes(0, 1800, label = '30 min', vjust = -1, hjust=0), color='red') +
geom_text(aes(0, 3600, label = '1 h', vjust = -1, hjust=0), color='red')+
scale_color_manual(values = brewer.pal(12, "Paired")[-c(11, 12)])+
theme_bw()+
theme(text = element_text(size=20))
