'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=c(0.5, 1)
)
?pheatmap
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.1)
)
seq(0.5, 1, 0.1)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.01)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.05)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.001)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.005)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.007)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.006)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.004)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 2:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
#paste0('Gold (', original_sizes['gold'], ')'),
paste0('HUANG\n(', original_sizes['huang'], ')'),
paste0('GUO\n(', original_sizes['guo'], ')'),
paste0('DU\n(', original_sizes['du'], ')'),
paste0('PAN\n(', original_sizes['pan'], ')'),
paste0('RICHOUX-\nREGULAR\n(', original_sizes['richoux-regular'], ')'),
paste0('RICHOUX-\nSTRICT\n(', original_sizes['richoux-strict'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.005)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 22:7]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
paste0('HUANG\n(', partition_sizes['huang 0'], ')'),
paste0('GUO\n(', partition_sizes['guo 0'], ')'),
paste0('DU\n(', partition_sizes['du 0'], ')'),
paste0('PAN\n(', partition_sizes['pan 0'], ')'),
paste0('RICHOUX-\nUNIPROT\n(', partition_sizes['richoux 0'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.005)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 22:length(result_mat)]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
paste0('HUANG\n(', partition_sizes['huang 0'], ')'),
paste0('GUO\n(', partition_sizes['guo 0'], ')'),
paste0('DU\n(', partition_sizes['du 0'], ')'),
paste0('PAN\n(', partition_sizes['pan 0'], ')'),
paste0('RICHOUX-\nUNIPROT\n(', partition_sizes['richoux 0'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.005)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 22:ncol(result_mat)]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
paste0('HUANG\n(', partition_sizes['huang 0'], ')'),
paste0('GUO\n(', partition_sizes['guo 0'], ')'),
paste0('DU\n(', partition_sizes['du 0'], ')'),
paste0('PAN\n(', partition_sizes['pan 0'], ')'),
paste0('RICHOUX-\nUNIPROT\n(', partition_sizes['richoux 0'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.005)
)
pheatmap(t(result_mat[c(1,2,3,4,5,8,10,12,14,15), 25:ncol(result_mat)]),
#annotation_row = annotation_col[annotation_col$Test == 'Original', 'Dataset', drop=FALSE],
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = 5,
display_numbers = TRUE,
legend = FALSE,
#filename = 'plots/heatmap_results_original_quer.pdf',
#width=6,
#height=5.2,
fontsize = 11,
labels_row = c(
paste0('HUANG\n(', partition_sizes['huang 0'], ')'),
paste0('GUO\n(', partition_sizes['guo 0'], ')'),
paste0('DU\n(', partition_sizes['du 0'], ')'),
paste0('PAN\n(', partition_sizes['pan 0'], ')'),
paste0('RICHOUX-\nUNIPROT\n(', partition_sizes['richoux 0'], ')')
),
labels_col = c('SPRINT',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'RF-PCA',
'RF-MDS',
'RF-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.'), breaks=seq(0.5, 1, 0.005)
)
df <- data.table('Consumption' = c('Air travel,1 passenger, NY↔SF', 'Human life, avg, 1 year', 'American life, avg, 1 year', 'Car, avg incl. fuel, 1 lifetime', 'NLP pipeline (parsing, SRL)', 'w/ tuning & experimentation', 'Transformer (big)', 'w/ neural architecture search'), 'CO2 emission (lbs)'=c(1984, 11023, 36156, 126000, 39, 78468, 192, 626155))
View(df)
df[, 'CO2 emission (kg)' := `CO2 emission (lbs)` * 0,453592]
df[, 'CO2 emission (kg)' := `CO2 emission (lbs)` * 0,453592]
df[, 'CO2 emission (kg)' := df$`CO2 emission (lbs)` * 0,453592]
df[, `CO2 emission (kg)` := `CO2 emission (lbs)` * 0,453592]
df[, `CO2 emission (kg)` := df$`CO2 emission (lbs)` * 0,453592]
df$`CO2 emission (lbs)` * 0,453592
df[, `CO2 emission (kg)` := df$`CO2 emission (lbs)` * 0.453592]
View(df)
df[, `CO2 emission (t)` := `CO2 emission (lbs)` * 0.000453592]
View(df)
View(df)
df$Category <- c(rep('Life', 4), rep('Deep Learning', 4))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+
geom_bar()
geom_col()
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()
df$Consumption <- factor(df$Consumption, levels = df$Consumption)
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()
df$Category <- factor(df$Category, levels = c('Life', 'Deep Learning'))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()
df$Consumption <- factor(df$Consumption, levels = rev(df$Consumption))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = element_blank())
?legend.position
?ggplot
?theme
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")
?geom_col
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text()
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(label=`CO2 emission (t)`)
?geom_text
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(label=<)
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(label=y)
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), position = position_stack(vjust = 0.5)
)
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), position = position_stack(vjust = 1))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), position = 'dodge')
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), position = position_dodge(0.9))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), position = position_dodge(0.5))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), nudge_y = 1)
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), nudge_x = 1)
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), nudge_x = 3)
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")+geom_text(aes(label=`CO2 emission (t)`), nudge_x = 0.2)
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none")
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none", text = element_text(size=20))
View(df)
df <- rbind(df, c('Human life, avg, 80 years', 11023*80, 4999.94462
*80, 4.99994462 * 80, 'Life'))
df <- rbind(df, data.table('Consumption' = 'Human life, avg, 80 years', 'CO2 emission (lbs)' = 11023*80, 'CO2 emission (kg)' = 4999.94462
*80, 'CO2 emission (t)' = 4.99994462 * 80, 'Category'= 'Life'))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none", text = element_text(size=20))
df$Consumption <- factor(df$Consumption, levels = c('Air travel,1 passenger, NY↔SF', 'Human life, avg, 1 year', 'Human life, avg, 80 years', 'American life, avg, 1 year', 'Car, avg incl. fuel, 1 lifetime', 'NLP pipeline (parsing, SRL)', 'w/ tuning & experimentation', 'Transformer (big)', 'w/ neural architecture search'))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none", text = element_text(size=20))
df$Consumption <- factor(df$Consumption, levels = rev(c('Air travel,1 passenger, NY↔SF', 'Human life, avg, 1 year', 'Human life, avg, 80 years', 'American life, avg, 1 year', 'Car, avg incl. fuel, 1 lifetime', 'NLP pipeline (parsing, SRL)', 'w/ tuning & experimentation', 'Transformer (big)', 'w/ neural architecture search')))
ggplot(df, aes(x = `CO2 emission (t)`, y = Consumption, fill = Category))+geom_col()+theme_bw()+ylab(' ')+theme(legend.position = "none", text = element_text(size=20))
