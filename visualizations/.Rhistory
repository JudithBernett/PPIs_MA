"PiYG")))(100),
breaks = breaksList,
#filename = ifelse(es,
#                  'plots/heatmap_results_rewired_es_quer.pdf',
#                  'plots/heatmap_results_rewired_quer.pdf'),
#width=7,
#height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
min(diff_mat, na.rm = T)
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.01))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.005))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.0049))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.0048))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.0047))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.0046))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.0047))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00475))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00476))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00477))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00478))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00479))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.0048))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00485))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00471))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.0047))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00469))
pheatmap(diff_mat,
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
legend = TRUE,
gaps_col = c(1,7),
display_numbers = TRUE,
color = colorRampPalette(rev(brewer.pal(n = 9, name =
"Purples")))(100),
breaks = breaksList,
#filename = ifelse(es,
#                  'plots/heatmap_results_rewired_es_quer.pdf',
#                  'plots/heatmap_results_rewired_quer.pdf'),
#width=7,
#height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
color <- colorRampPalette(rev(brewer.pal(n = 9, name =
"Purples")))(100)
rgb_colors <- col2rgb(pheatmap:::scale_colours(as.matrix(diff_mat), col = color, breaks = breaks, na_col = "#DDDDDD"))
rgb_colors <- col2rgb(pheatmap:::scale_colours(as.matrix(diff_mat), col = color, breaks = breaksList, na_col = "#DDDDDD"))
luminance <- rgb_colors * c(0.299, 0.587, 0.114)
luminance <- luminance['red', ]+luminance['green', ] + luminance['blue', ]
number_color <- ifelse(luminance < 125, "grey90", "grey30")
pheatmap(diff_mat,
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
legend = TRUE,
gaps_col = c(1,7),
display_numbers = TRUE,
color = colorRampPalette(rev(brewer.pal(n = 9, name =
"Purples")))(100),
breaks = breaksList,
number_color = number_color,
#filename = ifelse(es,
#                  'plots/heatmap_results_rewired_es_quer.pdf',
#                  'plots/heatmap_results_rewired_quer.pdf'),
#width=7,
#height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
diff_mat <- t(result_mat[, 2:8]) - t(result_mat[, 9:15])
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.06, 0.4, 0.00469))
color <- rev(colorRampPalette(rev(brewer.pal(n = 9, name =
"Purples")))(100))
rgb_colors <- col2rgb(pheatmap:::scale_colours(as.matrix(diff_mat), col = color, breaks = breaksList, na_col = "#DDDDDD"))
luminance <- rgb_colors * c(0.299, 0.587, 0.114)
luminance <- luminance['red', ]+luminance['green', ] + luminance['blue', ]
number_color <- ifelse(luminance < 125, "grey90", "grey30")
pheatmap(diff_mat,
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
legend = TRUE,
gaps_col = c(1,7),
display_numbers = TRUE,
color = rev(colorRampPalette(rev(brewer.pal(n = 9, name =
"Purples")))(100)),
breaks = breaksList,
number_color = number_color,
#filename = ifelse(es,
#                  'plots/heatmap_results_rewired_es_quer.pdf',
#                  'plots/heatmap_results_rewired_quer.pdf'),
#width=7,
#height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
diff_mat <- t(result_mat[, 2:8]) - t(result_mat[, 9:15])
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.4, 0.4, 0.005))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.4, 0.4, 0.08))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.4, 0.4, 0.008))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.4, 0.4, 0.0085))
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.4, 0.4, 0.0081))
color <- colorRampPalette(rev(brewer.pal(n = 9, name =
"PiYG")))(100)
rgb_colors <- col2rgb(pheatmap:::scale_colours(as.matrix(diff_mat), col = color, breaks = breaksList, na_col = "#DDDDDD"))
luminance <- rgb_colors * c(0.299, 0.587, 0.114)
luminance <- luminance['red', ]+luminance['green', ] + luminance['blue', ]
number_color <- ifelse(luminance < 125, "grey90", "grey30")
pheatmap(diff_mat,
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
legend = TRUE,
gaps_col = c(1,7),
display_numbers = TRUE,
color = colorRampPalette(brewer.pal(n = 9, name =
"PiYG"))(100),
breaks = breaksList,
number_color = number_color,
#filename = ifelse(es,
#                  'plots/heatmap_results_rewired_es_quer.pdf',
#                  'plots/heatmap_results_rewired_quer.pdf'),
#width=7,
#height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
diff_mat <- t(result_mat[, 2:8]) - t(result_mat[, 9:15])
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.4, 0.4, 0.0081))
color <- colorRampPalette(brewer.pal(n = 9, name =
"PiYG"))(100)
rgb_colors <- col2rgb(pheatmap:::scale_colours(as.matrix(diff_mat), col = color, breaks = breaksList, na_col = "#DDDDDD"))
luminance <- rgb_colors * c(0.299, 0.587, 0.114)
luminance <- luminance['red', ]+luminance['green', ] + luminance['blue', ]
number_color <- ifelse(luminance < 125, "grey90", "grey30")
pheatmap(diff_mat,
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
legend = TRUE,
gaps_col = c(1,7),
display_numbers = TRUE,
color = colorRampPalette(brewer.pal(n = 9, name =
"PiYG"))(100),
breaks = breaksList,
number_color = number_color,
#filename = ifelse(es,
#                  'plots/heatmap_results_rewired_es_quer.pdf',
#                  'plots/heatmap_results_rewired_quer.pdf'),
#width=7,
#height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
diff_mat <- t(result_mat[, 2:8]) - t(result_mat[, 9:15])
breaksList <- c(min(diff_mat, na.rm = T), seq(-0.4, 0.4, 0.0081))
color <- colorRampPalette(rev(brewer.pal(n = 9, name =
"PiYG")))(100)
rgb_colors <- col2rgb(pheatmap:::scale_colours(as.matrix(diff_mat), col = color, breaks = breaksList, na_col = "#DDDDDD"))
luminance <- rgb_colors * c(0.299, 0.587, 0.114)
luminance <- luminance['red', ]+luminance['green', ] + luminance['blue', ]
number_color <- ifelse(luminance < 125, "grey90", "grey30")
pheatmap(diff_mat,
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
legend = TRUE,
gaps_col = c(1,7),
display_numbers = TRUE,
color = colorRampPalette(rev(brewer.pal(n = 9, name =
"PiYG")))(100),
breaks = breaksList,
number_color = number_color,
#filename = ifelse(es,
#                  'plots/heatmap_results_rewired_es_quer.pdf',
#                  'plots/heatmap_results_rewired_quer.pdf'),
#width=7,
#height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
pheatmap(diff_mat,
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_col = c(1,7),
display_numbers = TRUE,
color = colorRampPalette(rev(brewer.pal(n = 9, name =
"PiYG")))(100),
breaks = breaksList,
number_color = number_color,
filename = 'plots/heatmap_results_rewired_delta_quer.pdf',
width=7,
height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
pheatmap(diff_mat,
annotation_colors = list(Dataset = c('Huang'='#E69F00','Guo'='#56B4E9', 'Du'='#009E73',
'Pan'='#F0E442','Richoux-Regular'='#0072B2','Richoux-Strict'='#CC79A7')),
cluster_rows = FALSE,
cluster_cols = FALSE,
legend = FALSE,
gaps_col = c(1,7),
display_numbers = TRUE,
color = colorRampPalette(rev(brewer.pal(n = 9, name =
"PiYG")))(100),
breaks = breaksList,
number_color = number_color,
filename = 'plots/heatmap_results_rewired_delta_quer.pdf',
width=7,
height=5,
labels_row = c(paste0('HUANG\n(', rewired_sizes['huang'], ')'),
paste0('GUO\n(', rewired_sizes['guo'], ')'),
paste0('DU\n(', rewired_sizes['du'], ')'),
paste0('PAN\n(', rewired_sizes['pan'], ')'),
paste0('RICHOUX-REGULAR\n(', rewired_sizes['richoux-regular'], ')'),
paste0('RICHOUX-STRICT\n(', rewired_sizes['richoux-strict'], ')'),
paste0('D-SCRIPT\nUNBALANCED\n(', rewired_sizes['dscript'], ')')
),
labels_col = c('SPRINT\n(AUPR)',
'Richoux-\nFC',
'Richoux-\nLSTM',
'DeepFE',
'PIPR',
'D-SCRIPT',
'Topsy Turvy',
'RF-PCA',
'SVM-PCA',
'RF-MDS',
'SVM-MDS',
'RF-\nnode2vec',
'SVM-\nnode2vec',
'Harmonic\nFunction',
'Global and\nLocal Cons.')
)
library(data.table)
library(ggplot2)
library(RColorBrewer)
library(pheatmap)
library(latex2exp)
measure <- 'Accuracy'
es <- TRUE
if(es){
original_results_es <- fread(paste0('results/original_', measure, '_es.csv'))
gold_standard_results_es <- fread(paste0('results/gold_standard_', measure, '_es.csv'))
original_results_es <- rbind(original_results, gold_standard_results)
original_results_es$Test <- 'Original'
rewired_results_es <- fread(paste0('results/rewired_', measure, '_es.csv'))
rewired_results_es$Test <- 'Rewired'
partition_results_es <- fread(paste0('results/partition_', measure, '_es.csv'))
}
if(es){
original_results_es <- fread(paste0('results/original_', measure, '_es.csv'))
gold_standard_results_es <- fread(paste0('results/gold_standard_', measure, '_es.csv'))
original_results_es <- rbind(original_results_es, gold_standard_results_es)
original_results_es$Test <- 'Original'
rewired_results_es <- fread(paste0('results/rewired_', measure, '_es.csv'))
rewired_results_es$Test <- 'Rewired'
partition_results_es <- fread(paste0('results/partition_', measure, '_es.csv'))
}
original_results <- fread(paste0('results/original_', measure, '.csv'))
gold_standard_results <- fread(paste0('results/gold_standard_', measure, '.csv'))
original_results <- rbind(original_results, gold_standard_results)
original_results$Test <- 'Original'
rewired_results <- fread(paste0('results/rewired_', measure, '.csv'))
rewired_results$Test <- 'Rewired'
partition_results <- fread(paste0('results/partition_', measure, '.csv'))
colnames(partition_results) <- c('Model', 'Dataset', measure, 'Test')
colnames(partition_results_es) <- c('Model', 'Dataset', measure, 'Test')
all_results <- rbind(original_results, rewired_results)
all_results_es <- rbind(original_results_es, rewired_results_es)
for(df in c(all_results, all_results_es)){
df <- df[, Model := factor(Model,
levels=c('SPRINT',
'deepPPI_FC', 'deepPPI_LSTM',
'DeepFE', 'PIPR', 'D-SCRIPT', 'Topsy_Turvy',
'RF_PCA','SVM_PCA', 'RF_MDS', 'SVM_MDS',
'RF_node2vec',  'SVM_node2vec', 'degree_hf', 'degree_cons'))]
df <- df[, Dataset := factor(Dataset,
levels = c('gold_standard', 'huang', 'guo', 'du', 'pan', 'richoux-regular', 'richoux-strict', 'dscript'))]
df <- rbind(df, partition_results)
df[, Test := factor(Test, levels=c('Original', 'Rewired', 'both->0', 'both->1', '0->1'))]
df[, Model := gsub('deepPPI_FC', 'Richoux-FC', Model)]
df[, Model := gsub('deepPPI_LSTM', 'Richoux-LSTM', Model)]
df[, Model := gsub('RF_PCA', 'RF PCA', Model)]
df[, Model := gsub('SVM_PCA', 'SVM PCA', Model)]
df[, Model := gsub('RF_MDS', 'RF MDS', Model)]
df[, Model := gsub('SVM_MDS', 'SVM MDS', Model)]
df[, Model := gsub('RF_node2vec', 'RF node2vec', Model)]
df[, Model := gsub('SVM_node2vec', 'SVM node2vec', Model)]
df[, Model := gsub('degree_hf', 'Harmonic Function', Model)]
df[, Model := gsub('degree_cons', 'Global and Local Consistency', Model)]
df[, Model := gsub('Topsy_Turvy', 'Topsy Turvy', Model)]
df <- df[, Model := factor(Model,
levels=c('SPRINT',
'Richoux-FC', 'Richoux-LSTM',
'DeepFE', 'PIPR', 'D-SCRIPT', 'Topsy Turvy', 'RF PCA','SVM PCA', 'RF MDS', 'SVM MDS',
'RF node2vec',  'SVM node2vec', 'Harmonic Function', 'Global and Local Consistency'))]
}
for(df in c(all_results, all_results_es)){
browser()
df <- df[, Model := factor(Model,
levels=c('SPRINT',
'deepPPI_FC', 'deepPPI_LSTM',
'DeepFE', 'PIPR', 'D-SCRIPT', 'Topsy_Turvy',
'RF_PCA','SVM_PCA', 'RF_MDS', 'SVM_MDS',
'RF_node2vec',  'SVM_node2vec', 'degree_hf', 'degree_cons'))]
df <- df[, Dataset := factor(Dataset,
levels = c('gold_standard', 'huang', 'guo', 'du', 'pan', 'richoux-regular', 'richoux-strict', 'dscript'))]
df <- rbind(df, partition_results)
df[, Test := factor(Test, levels=c('Original', 'Rewired', 'both->0', 'both->1', '0->1'))]
df[, Model := gsub('deepPPI_FC', 'Richoux-FC', Model)]
df[, Model := gsub('deepPPI_LSTM', 'Richoux-LSTM', Model)]
df[, Model := gsub('RF_PCA', 'RF PCA', Model)]
df[, Model := gsub('SVM_PCA', 'SVM PCA', Model)]
df[, Model := gsub('RF_MDS', 'RF MDS', Model)]
df[, Model := gsub('SVM_MDS', 'SVM MDS', Model)]
df[, Model := gsub('RF_node2vec', 'RF node2vec', Model)]
df[, Model := gsub('SVM_node2vec', 'SVM node2vec', Model)]
df[, Model := gsub('degree_hf', 'Harmonic Function', Model)]
df[, Model := gsub('degree_cons', 'Global and Local Consistency', Model)]
df[, Model := gsub('Topsy_Turvy', 'Topsy Turvy', Model)]
df <- df[, Model := factor(Model,
levels=c('SPRINT',
'Richoux-FC', 'Richoux-LSTM',
'DeepFE', 'PIPR', 'D-SCRIPT', 'Topsy Turvy', 'RF PCA','SVM PCA', 'RF MDS', 'SVM MDS',
'RF node2vec',  'SVM node2vec', 'Harmonic Function', 'Global and Local Consistency'))]
}
df
is.data.table(df)
class(df)
data.table(df)
q()
