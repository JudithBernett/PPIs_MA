custom_res <- '../algorithms/Custom/results/'
deepFE_res <- '../algorithms/DeepFE-PPI/result/custom/'
deepPPI_res <- '../algorithms/DeepPPI/keras/results_custom/'
seqppi_res <- '../algorithms/seq_ppi/binary/model/lasagna/results/'
sprint_res <- '../algorithms/SPRINT/results/rewired/'
# read in data
all_results <- data.table(Model=character(), Dataset=character(), Accuracy=numeric())
# custom
custom_results <- lapply(paste0(custom_res,  list.files(custom_res, pattern='^rewired_(du|guo|huang|pan|richoux).*.csv')), fread)
file_names <- tstrsplit(list.files(custom_res, pattern='^rewired_(du|guo|huang|pan|richoux).*.csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(custom_results) <- file_names
custom_results <- rbindlist(custom_results, idcol = 'filename')
custom_results[, c('dataset', 'encoding', 'model') := tstrsplit(filename, '_', keep=c(2,3,4))]
custom_results[, Model := paste(model, encoding, sep = '_')]
custom_results <- custom_results[V1 == 'Accuracy']
colnames(custom_results) <- c('filename', 'Measure', 'Accuracy', 'Dataset', 'Encoding', 'Method', 'Model')
all_results <- rbind(all_results, custom_results[, c('Model', 'Dataset', 'Accuracy')])
# deepFE
deepFE_results <- lapply(paste0(deepFE_res, list.files(deepFE_res, pattern = '^rewired_scores_(du|guo|huang|pan|richoux_regular|richoux_strict).csv', recursive = TRUE)), fread)
file_names <- list.files(deepFE_res)[-5]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(deepFE_results) <- file_names
deepFE_results <- rbindlist(deepFE_results, idcol = 'Dataset')
deepFE_results <- deepFE_results[V1 == 'Accuracy']
colnames(deepFE_results) <- c('Dataset', 'Measure', 'Accuracy')
deepFE_results$Model <- 'DeepFE'
all_results <- rbind(all_results, deepFE_results[, c('Model', 'Dataset', 'Accuracy')])
# deepPPI
deepPPI_results <- lapply(paste0(deepPPI_res, list.files(deepPPI_res, pattern='(FC|LSTM)_rewired_(du|guo|huang|pan|richoux).*.csv')), fread)
file_names <- tstrsplit(list.files(deepPPI_res, pattern='(FC|LSTM)_rewired_(du|guo|huang|pan|richoux).*.csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(deepPPI_results) <- file_names
deepPPI_results <- rbindlist(deepPPI_results, idcol='filename')
deepPPI_results <- deepPPI_results[, c('Model', 'Dataset') := tstrsplit(filename, '_', keep = c(1,3))]
n_train <- unique(deepPPI_results[variable == 'n_train', c('Dataset', 'variable', 'value')])
deepPPI_results <- deepPPI_results[variable == 'Accuracy']
deepPPI_results[, Model := paste('deepPPI', Model, sep='_')]
colnames(deepPPI_results) <- c('filename', 'variable', 'Accuracy', 'Model', 'Dataset')
n_train[order(value), -c('variable')]
library(data.table)
library(ggplot2)
library(RColorBrewer)
original_results <- fread('results/original.csv')
original_results$Test <- 'Original'
rewired_results <- fread('results/rewired.csv')
rewired_results$Test <- 'Rewired'
partition_results <- fread('results/partition.csv')
colnames(partition_results) <- c('Model', 'Dataset', 'Accuracy', 'Test')
all_results <- rbind(original_results, rewired_results)
all_results <- all_results[, Model := factor(Model,
levels=c("SPRINT",
"deepPPI_FC", "deepPPI_LSTM",
"DeepFE", "PIPR", "RF_PCA","SVM_PCA", "RF_MDS", "SVM_MDS",
"RF_node2vec",  "SVM_node2vec"))]
all_results <- all_results[, Dataset := factor(Dataset,
levels = c("huang", "guo", "du", "pan", "richoux-regular", "richoux-strict"))]
ggplot(all_results, aes(x=Dataset, y = Accuracy, color=Test, group=Test))+
geom_line(size=1, alpha=0.7)+
geom_point(size=3)+
facet_wrap(~Model)+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))+
scale_x_discrete(labels=c("huang" = "Huang", "guo" = "Guo",
"du" = "Du","pan" = "Pan", "richoux-regular" = "Richoux regular",
"richoux-strict" = "Richoux strict"))
ggsave("./original_vs_rewired.png",height=8, width=10)
all_results <- rbind(all_results, partition_results)
all_results[, Test := factor(Test, levels=c('Original', 'Rewired', 'both->0', 'both->1', '0->1'))]
ggplot(all_results, aes(x=Dataset, y = Accuracy, color=Test, group=Test))+
geom_line(size=1, alpha=0.7)+
geom_point(size=2)+
facet_wrap(~Model)+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))+
scale_x_discrete(labels=c("huang" = "Huang", "guo" = "Guo",
"du" = "Du","pan" = "Pan", "richoux-regular" = "Richoux regular",
"richoux-strict" = "Richoux strict"))+
scale_color_manual(values = brewer.pal(5,"Set2")[c(2,3,1,5,4)])
ggplot(all_results, aes(x=Dataset, y = Accuracy, color=Model, group=Model))+
geom_line(size=1, alpha=0.7)+
geom_point(size=2)+
facet_wrap(~Test)+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))+
scale_x_discrete(labels=c("huang" = "Huang", "guo" = "Guo",
"du" = "Du","pan" = "Pan", "richoux-regular" = "Richoux regular",
"richoux-strict" = "Richoux strict"))+
scale_color_manual(values = brewer.pal(12,"Paired")[-11])
library(pheatmap)
?pheatmap
View(all_results)
as.matrix(all_results[, setNames(as.list(dataset), Accuracy), by = model][, model := NULL])
as.matrix(all_results[, setNames(as.list(Dataset), Accuracy), by = Model][, Model := NULL])
as.matrix(all_results[, setNames(as.list(Accuracy), Dataset), by = Model][, Model := NULL])
tmp <- as.matrix(all_results[, setNames(as.list(Accuracy), Dataset), by = Model][, Model := NULL])
View(tmp)
unique(all_results$Model)
rownames(tmp) <- unique(all_results$Model)
View(tmp)
annotation_row <- all_results[, c(Dataset, Test)]
annotation_row
annotation_row <- data.frame(Dataset = colnames(result_mat),
Test = rep("Original", 9), rep("Rewired", 9), rep(c("0->1", "both->0", "both->1"), 3))
result_mat <- as.matrix(all_results[, setNames(as.list(Accuracy), Dataset), by = Model][, Model := NULL])
rownames(result_mat) <- unique(all_results$Model)
annotation_row <- data.frame(Dataset = colnames(result_mat),
Test = rep("Original", 9), rep("Rewired", 9), rep(c("0->1", "both->0", "both->1"), 3))
annotation_row
annotation_row <- data.frame(Dataset = colnames(result_mat),
Test = c(rep("Original", 9), rep("Rewired", 9), rep(c("0->1", "both->0", "both->1"), 3)))
annotation_row
annotation_row <- data.frame(Dataset = colnames(result_mat),
Test = c(rep("Original", 6), rep("Rewired", 6), rep(c("0->1", "both->0", "both->1"), 3)))
annotation_row <- data.frame(Dataset = colnames(result_mat),
Test = c(rep("Original", 6), rep("Rewired", 6), rep(c("0->1", "both->0", "both->1"), 5)))
annotation_row
annotation_col <- data.frame(Model=rownames(result_mat))
pheatmap(result_mat, annotation_row = annotation_row, annotation_col = annotation_col)
View(result_mat)
pheatmap(result_mat)
colnames(result_mat) <- NULL
View(result_mat)
rownames(result_mat) <- NULL
pheatmap(result_mat,
annotation_row = annotation_row,
annotation_col = annotation_col)
result_mat <- as.matrix(all_results[, setNames(as.list(Accuracy), Dataset), by = Model][, Model := NULL])
rownames(result_mat) <- unique(all_results$Model)
annotation_row <- data.frame(Test = c(rep("Original", 6), rep("Rewired", 6), rep(c("0->1", "both->0", "both->1"), 5)))
rownames(annotation_row) <- rownames(result_mat)
result_mat <- as.matrix(all_results[, setNames(as.list(Accuracy), Dataset), by = Model][, Model := NULL])
rownames(result_mat) <- unique(all_results$Model)
annotation_row <- data.frame(Test = c(rep("Original", 6), rep("Rewired", 6), rep(c("0->1", "both->0", "both->1"), 5)))
rownames(result_mat)
View(result_mat)
result_mat <- as.matrix(all_results[, setNames(as.list(Accuracy), Dataset), by = Model][, Model := NULL])
rownames(result_mat) <- unique(all_results$Model)
annotation_col <- data.frame(Test = c(rep("Original", 6), rep("Rewired", 6), rep(c("0->1", "both->0", "both->1"), 5)))
rownames(annotation_col) <- colnames(result_mat)
pheatmap(result_mat,
annotation_col= annotation_col)
View(annotation_col)
result_mat <- as.matrix(all_results[, setNames(as.list(Accuracy), Dataset), by = Model][, Model := NULL])
rownames(result_mat) <- unique(all_results$Model)
annotation_col <- data.frame(Dataset = colnames(result_mat),
Test = c(rep("Original", 6), rep("Rewired", 6), rep(c("0->1", "both->0", "both->1"), 5)))
colnames(result_mat) <- paste(annotation_col$Dataset, annotation_col$Test, sep="_")
View(result_mat)
pheatmap(result_mat,
annotation_col = annotation_col)
rownames(annotation_col) <- colnames(result_mat)
pheatmap(result_mat,
annotation_col = annotation_col)
pheatmap(result_mat,
annotation_col = annotation_col,
cluster_rows = FALSE,
cluster_cols = FALSE)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#### result prefixes
custom_res <- '../algorithms/Custom/results/'
deepFE_res <- '../algorithms/DeepFE-PPI/result/custom/'
deepPPI_res <- '../algorithms/DeepPPI/keras/results_custom/'
seqppi_res <- '../algorithms/seq_ppi/binary/model/lasagna/results/'
sprint_res <- '../algorithms/SPRINT/results/original/'
# read in data
all_results <- data.table(Model=character(), Dataset=character(), Accuracy=numeric())
# custom
custom_results <- lapply(paste0(custom_res,  list.files(custom_res, pattern='^(du|guo|huang|pan|richoux).*.csv')), fread)
file_names <- tstrsplit(list.files(custom_res, pattern='^(du|guo|huang|pan|richoux).*.csv'), '.csv', keep=1)[[1]]
names(custom_results) <- file_names
custom_results <- rbindlist(custom_results, idcol = 'filename')
custom_results[, c('dataset', 'encoding') := tstrsplit(filename, '_', keep=c(1,2))]
custom_results[, method := as.character(lapply(strsplit(as.character(custom_results$filename), split='_'), tail, n=1))]
custom_results[dataset == 'richoux']$dataset <- custom_results[dataset == 'richoux',
ifelse(grepl('regular', filename, fixed=TRUE), 'richoux-regular', 'richoux-strict')]
custom_results[, Model := paste(method, encoding, sep = '_')]
custom_results <- custom_results[V1 == 'Accuracy']
colnames(custom_results) <- c('filename', 'Measure', 'Accuracy', 'Dataset', 'Encoding', 'Method', 'Model')
all_results <- rbind(all_results, custom_results[, c('Model', 'Dataset', 'Accuracy')])
# deepFE
deepFE_results <- lapply(paste0(deepFE_res, list.files(deepFE_res, pattern = '^scores_(du|guo|huang|pan|richoux_regular|richoux_strict).csv', recursive = TRUE)), fread)
file_names <- list.files(deepFE_res)[-5]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(deepFE_results) <- file_names
deepFE_results <- rbindlist(deepFE_results, idcol = 'Dataset')
deepFE_results <- deepFE_results[V1 == 'Accuracy']
colnames(deepFE_results) <- c('Dataset', 'Measure', 'Accuracy')
deepFE_results$Model <- 'DeepFE'
all_results <- rbind(all_results, deepFE_results[, c('Model', 'Dataset', 'Accuracy')])
# deepPPI
deepPPI_results <- lapply(paste0(deepPPI_res, list.files(deepPPI_res, pattern='original_(du|guo|huang|pan|richoux).*.csv')), fread)
file_names <- tstrsplit(list.files(deepPPI_res, pattern='original_(du|guo|huang|pan|richoux).*.csv'), '.csv', keep=1)[[1]]
file_names[!grepl('LSTM', file_names, fixed=TRUE)] <- paste('FC',file_names[!grepl('LSTM', file_names, fixed=TRUE)], sep='_')
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(deepPPI_results) <- file_names
deepPPI_results <- rbindlist(deepPPI_results, idcol='filename')
deepPPI_results <- deepPPI_results[, c('Model', 'Dataset') := tstrsplit(filename, '_', keep = c(1,3))]
n_train <- unique(deepPPI_results[variable == 'n_train', c('Dataset', 'variable', 'value')])
deepPPI_results <- deepPPI_results[variable == 'Accuracy']
deepPPI_results[, Model := paste('deepPPI', Model, sep='_')]
colnames(deepPPI_results) <- c('filename', 'variable', 'Accuracy', 'Model', 'Dataset')
all_results <- rbind(all_results, deepPPI_results[, c('Model', 'Dataset', 'Accuracy')])
# PIPR
pipr_results <- lapply(paste0(seqppi_res, list.files(seqppi_res, pattern='^(du|guo|huang|pan|richoux_regular|richoux_strict).csv')), fread)
file_names <- tstrsplit(list.files(seqppi_res, pattern='^(du|guo|huang|pan|richoux_regular|richoux_strict).csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(pipr_results) <- file_names
pipr_results <- rbindlist(pipr_results, idcol='Dataset')
pipr_results <- pipr_results[V1 == 'Accuracy']
pipr_results$Model <- 'PIPR'
colnames(pipr_results) <- c('Dataset', 'Measure', 'Accuracy', 'Model')
all_results <- rbind(all_results, pipr_results[, c('Model', 'Dataset', 'Accuracy')])
# SPRINT
sprint_results <- fread(paste0(sprint_res, 'all_results.tsv'))
sprint_results$Model <- 'SPRINT'
colnames(sprint_results) <- c('Dataset', 'Accuracy', 'AUPR', 'Model')
sprint_results$Dataset[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', sprint_results$Dataset[grepl('richoux', file_names, fixed=TRUE)])
all_results <- rbind(all_results, sprint_results[, c('Model', 'Dataset', 'Accuracy')])
# visualization
all_results <- all_results[, Dataset := factor(Dataset,
levels = c("huang", "guo", "du", "pan", "richoux-regular", "richoux-strict"))]
all_results <- all_results[, Model := factor(Model,
levels=c("RF_PCA","SVM_PCA", "RF_MDS", "SVM_MDS",
"RF_node2vec",  "SVM_node2vec", "SPRINT",
"deepPPI_FC", "deepPPI_LSTM",
"DeepFE", "PIPR"))]
ggplot(all_results, aes(x=Dataset, y = Accuracy, color = Model, group=Model))+
geom_line(size=1, alpha=0.7)+
geom_point(size=3)+
scale_x_discrete(labels=c("huang" = "Huang (4,136)", "guo" = "Guo (7,700)",
"du" = "Du (24,578)", "pan" = "Pan (39,436)",
"richoux-regular" = "Richoux regular (77,280)",
"richoux-strict" = "Richoux strict (78,612)"))+
ylim(0.5, 1.0)+
#scale_y_continuous(limits=c(0.5, 1.0),oob = rescale_none)+
labs(x = "Dataset (n training)", y = "Accuracy/AUC for SPRINT") +
scale_color_manual(values = brewer.pal(12, "Paired")[-11])+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
library(data.table)
library(ggplot2)
library(RColorBrewer)
#### result prefixes
custom_res <- '../algorithms/Custom/results/'
deepFE_res <- '../algorithms/DeepFE-PPI/result/custom/'
deepPPI_res <- '../algorithms/DeepPPI/keras/results_custom/'
seqppi_res <- '../algorithms/seq_ppi/binary/model/lasagna/results/'
sprint_res <- '../algorithms/SPRINT/results/rewired/'
# read in data
all_results <- data.table(Model=character(), Dataset=character(), Accuracy=numeric())
# custom
custom_results <- lapply(paste0(custom_res,  list.files(custom_res, pattern='^rewired_(du|guo|huang|pan|richoux).*.csv')), fread)
file_names <- tstrsplit(list.files(custom_res, pattern='^rewired_(du|guo|huang|pan|richoux).*.csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(custom_results) <- file_names
custom_results <- rbindlist(custom_results, idcol = 'filename')
custom_results[, c('dataset', 'encoding', 'model') := tstrsplit(filename, '_', keep=c(2,3,4))]
custom_results[, Model := paste(model, encoding, sep = '_')]
custom_results <- custom_results[V1 == 'Accuracy']
colnames(custom_results) <- c('filename', 'Measure', 'Accuracy', 'Dataset', 'Encoding', 'Method', 'Model')
all_results <- rbind(all_results, custom_results[, c('Model', 'Dataset', 'Accuracy')])
# deepFE
deepFE_results <- lapply(paste0(deepFE_res, list.files(deepFE_res, pattern = '^rewired_scores_(du|guo|huang|pan|richoux_regular|richoux_strict).csv', recursive = TRUE)), fread)
file_names <- list.files(deepFE_res)[-5]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(deepFE_results) <- file_names
deepFE_results <- rbindlist(deepFE_results, idcol = 'Dataset')
deepFE_results <- deepFE_results[V1 == 'Accuracy']
colnames(deepFE_results) <- c('Dataset', 'Measure', 'Accuracy')
deepFE_results$Model <- 'DeepFE'
all_results <- rbind(all_results, deepFE_results[, c('Model', 'Dataset', 'Accuracy')])
# deepPPI
deepPPI_results <- lapply(paste0(deepPPI_res, list.files(deepPPI_res, pattern='(FC|LSTM)_rewired_(du|guo|huang|pan|richoux).*.csv')), fread)
file_names <- tstrsplit(list.files(deepPPI_res, pattern='(FC|LSTM)_rewired_(du|guo|huang|pan|richoux).*.csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(deepPPI_results) <- file_names
deepPPI_results <- rbindlist(deepPPI_results, idcol='filename')
deepPPI_results <- deepPPI_results[, c('Model', 'Dataset') := tstrsplit(filename, '_', keep = c(1,3))]
n_train <- unique(deepPPI_results[variable == 'n_train', c('Dataset', 'variable', 'value')])
deepPPI_results <- deepPPI_results[variable == 'Accuracy']
deepPPI_results[, Model := paste('deepPPI', Model, sep='_')]
colnames(deepPPI_results) <- c('filename', 'variable', 'Accuracy', 'Model', 'Dataset')
all_results <- rbind(all_results, deepPPI_results[, c('Model', 'Dataset', 'Accuracy')])
# PIPR
pipr_results <- lapply(paste0(seqppi_res, list.files(seqppi_res, pattern='^rewired_(du|guo|huang|pan|richoux_regular|richoux_strict).csv')), fread)
file_names <- tstrsplit(list.files(seqppi_res, pattern='^rewired_(du|guo|huang|pan|richoux_regular|richoux_strict).csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(pipr_results) <- file_names
pipr_results <- rbindlist(pipr_results, idcol='Dataset')
pipr_results[, Dataset := tstrsplit(Dataset, 'rewired_', keep=2)]
pipr_results <- pipr_results[V1 == 'Accuracy']
pipr_results$Model <- 'PIPR'
colnames(pipr_results) <- c('Dataset', 'Measure', 'Accuracy', 'Model')
all_results <- rbind(all_results, pipr_results[, c('Model', 'Dataset', 'Accuracy')])
# SPRINT
sprint_results <- fread(paste0(sprint_res, 'all_results.tsv'))
sprint_results$Model <- 'SPRINT'
colnames(sprint_results) <- c('Dataset', 'Accuracy', 'AUPR', 'Model')
sprint_results$Dataset[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', sprint_results$Dataset[grepl('richoux', file_names, fixed=TRUE)])
all_results <- rbind(all_results, sprint_results[, c('Model', 'Dataset', 'Accuracy')])
# visualization
all_results <- all_results[, Dataset := factor(Dataset,
levels = c("huang", "guo", "du", "richoux-regular", "richoux-strict", "pan"))]
all_results <- all_results[, Model := factor(Model,
levels=c("RF_PCA","SVM_PCA", "RF_MDS", "SVM_MDS",
"RF_node2vec",  "SVM_node2vec", "SPRINT",
"deepPPI_FC", "deepPPI_LSTM",
"DeepFE", "PIPR"))]
ggplot(all_results, aes(x=Dataset, y = Accuracy, color = Model, group=Model))+
geom_line(size=1, alpha=0.7)+
geom_point(size=3)+
scale_x_discrete(labels=c("huang" = "Huang (4,242)", "guo" = "Guo (7,656)",
"du" = "Du (24,478)", "richoux-regular" = "Richoux regular (33,682)",
"richoux-strict" = "Richoux strict (34,026)", "pan" = "Pan (38,956)")
)+
ylim(0.5, 1.0)+
#scale_y_continuous(limits=c(0.5, 1.0),oob = rescale_none)+
labs(x = "Dataset (n training)", y = "Accuracy/AUC for SPRINT") +
scale_color_manual(values = brewer.pal(12, "Paired")[-11])+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
pheatmap(result_mat,
annotation_col = annotation_col,
cluster_rows = FALSE,
cluster_cols = FALSE)
pheatmap(result_mat,
annotation_col = annotation_col,
cluster_rows = FALSE,
cluster_cols = FALSE,
cutree_rows = 4)
pheatmap(result_mat,
annotation_col = annotation_col,
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 6)
pheatmap(result_mat,
annotation_col = annotation_col,
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 6,
gaps_col = c(6,12))
pheatmap(result_mat,
annotation_col = annotation_col,
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 6,
gaps_col = c(6,12))
library(data.table)
library(ggplot2)
library(RColorBrewer)
library(pheatmap)
original_results <- fread('results/original.csv')
original_results$Test <- 'Original'
rewired_results <- fread('results/rewired.csv')
rewired_results$Test <- 'Rewired'
partition_results <- fread('results/partition.csv')
colnames(partition_results) <- c('Model', 'Dataset', 'Accuracy', 'Test')
all_results <- rbind(original_results, rewired_results)
all_results <- all_results[, Model := factor(Model,
levels=c("SPRINT",
"deepPPI_FC", "deepPPI_LSTM",
"DeepFE", "PIPR", "RF_PCA","SVM_PCA", "RF_MDS", "SVM_MDS",
"RF_node2vec",  "SVM_node2vec"))]
all_results <- all_results[, Dataset := factor(Dataset,
levels = c("huang", "guo", "du", "pan", "richoux-regular", "richoux-strict"))]
ggplot(all_results, aes(x=Dataset, y = Accuracy, color=Test, group=Test))+
geom_line(size=1, alpha=0.7)+
geom_point(size=3)+
facet_wrap(~Model)+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))+
scale_x_discrete(labels=c("huang" = "Huang", "guo" = "Guo",
"du" = "Du","pan" = "Pan", "richoux-regular" = "Richoux regular",
"richoux-strict" = "Richoux strict"))
#ggsave("./original_vs_rewired.png",height=8, width=10)
all_results <- rbind(all_results, partition_results)
all_results[, Test := factor(Test, levels=c('Original', 'Rewired', 'both->0', 'both->1', '0->1'))]
ggplot(all_results, aes(x=Dataset, y = Accuracy, color=Test, group=Test))+
geom_line(size=1, alpha=0.7)+
geom_point(size=2)+
facet_wrap(~Model)+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))+
scale_x_discrete(labels=c("huang" = "Huang", "guo" = "Guo",
"du" = "Du","pan" = "Pan", "richoux-regular" = "Richoux regular",
"richoux-strict" = "Richoux strict"))+
scale_color_manual(values = brewer.pal(5,"Set2")[c(2,3,1,5,4)])
#ggsave("./original_vs_rewired_vs_partitions.png",height=8, width=10)
ggplot(all_results, aes(x=Dataset, y = Accuracy, color=Model, group=Model))+
geom_line(size=1, alpha=0.7)+
geom_point(size=2)+
facet_wrap(~Test)+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))+
scale_x_discrete(labels=c("huang" = "Huang", "guo" = "Guo",
"du" = "Du","pan" = "Pan", "richoux-regular" = "Richoux regular",
"richoux-strict" = "Richoux strict"))+
scale_color_manual(values = brewer.pal(12,"Paired")[-11])
#ggsave("./original_vs_rewired_vs_partitions_models.png",height=8, width=10)
result_mat <- as.matrix(all_results[, setNames(as.list(Accuracy), Dataset), by = Model][, Model := NULL])
rownames(result_mat) <- unique(all_results$Model)
annotation_col <- data.frame(Dataset = colnames(result_mat),
Test = c(rep("Original", 6), rep("Rewired", 6), rep(c("0->1", "both->0", "both->1"), 5)))
colnames(result_mat) <- paste(annotation_col$Dataset, annotation_col$Test, sep="_")
rownames(annotation_col) <- colnames(result_mat)
pheatmap(result_mat,
annotation_col = annotation_col,
cluster_rows = FALSE,
cluster_cols = FALSE,
gaps_row = 6,
gaps_col = c(6,12))
View(all_results)
library(data.table)
library(ggplot2)
library(RColorBrewer)
#### result prefixes
custom_res <- '../algorithms/Custom/results/'
deepFE_res <- '../algorithms/DeepFE-PPI/result/custom/'
deepPPI_res <- '../algorithms/DeepPPI/keras/results_custom/'
seqppi_res <- '../algorithms/seq_ppi/binary/model/lasagna/results/'
sprint_res <- '../algorithms/SPRINT/results/rewired/'
# read in data
all_results <- data.table(Model=character(), Dataset=character(), Accuracy=numeric())
# custom
custom_results <- lapply(paste0(custom_res,  list.files(custom_res, pattern='^rewired_(du|guo|huang|pan|richoux).*.csv')), fread)
file_names <- tstrsplit(list.files(custom_res, pattern='^rewired_(du|guo|huang|pan|richoux).*.csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(custom_results) <- file_names
custom_results <- rbindlist(custom_results, idcol = 'filename')
custom_results[, c('dataset', 'encoding', 'model') := tstrsplit(filename, '_', keep=c(2,3,4))]
custom_results[, Model := paste(model, encoding, sep = '_')]
custom_results <- custom_results[V1 == 'Accuracy']
colnames(custom_results) <- c('filename', 'Measure', 'Accuracy', 'Dataset', 'Encoding', 'Method', 'Model')
all_results <- rbind(all_results, custom_results[, c('Model', 'Dataset', 'Accuracy')])
# deepFE
deepFE_results <- lapply(paste0(deepFE_res, list.files(deepFE_res, pattern = '^rewired_scores_(du|guo|huang|pan|richoux_regular|richoux_strict).csv', recursive = TRUE)), fread)
file_names <- list.files(deepFE_res)[-5]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(deepFE_results) <- file_names
deepFE_results <- rbindlist(deepFE_results, idcol = 'Dataset')
deepFE_results <- deepFE_results[V1 == 'Accuracy']
colnames(deepFE_results) <- c('Dataset', 'Measure', 'Accuracy')
deepFE_results$Model <- 'DeepFE'
all_results <- rbind(all_results, deepFE_results[, c('Model', 'Dataset', 'Accuracy')])
# deepPPI
deepPPI_results <- lapply(paste0(deepPPI_res, list.files(deepPPI_res, pattern='(FC|LSTM)_rewired_(du|guo|huang|pan|richoux).*.csv')), fread)
file_names <- tstrsplit(list.files(deepPPI_res, pattern='(FC|LSTM)_rewired_(du|guo|huang|pan|richoux).*.csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(deepPPI_results) <- file_names
deepPPI_results <- rbindlist(deepPPI_results, idcol='filename')
deepPPI_results <- deepPPI_results[, c('Model', 'Dataset') := tstrsplit(filename, '_', keep = c(1,3))]
n_train <- unique(deepPPI_results[variable == 'n_train', c('Dataset', 'variable', 'value')])
deepPPI_results <- deepPPI_results[variable == 'Accuracy']
deepPPI_results[, Model := paste('deepPPI', Model, sep='_')]
colnames(deepPPI_results) <- c('filename', 'variable', 'Accuracy', 'Model', 'Dataset')
all_results <- rbind(all_results, deepPPI_results[, c('Model', 'Dataset', 'Accuracy')])
# PIPR
pipr_results <- lapply(paste0(seqppi_res, list.files(seqppi_res, pattern='^rewired_(du|guo|huang|pan|richoux_regular|richoux_strict).csv')), fread)
file_names <- tstrsplit(list.files(seqppi_res, pattern='^rewired_(du|guo|huang|pan|richoux_regular|richoux_strict).csv'), '.csv', keep=1)[[1]]
file_names[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', file_names[grepl('richoux', file_names, fixed=TRUE)])
names(pipr_results) <- file_names
pipr_results <- rbindlist(pipr_results, idcol='Dataset')
pipr_results[, Dataset := tstrsplit(Dataset, 'rewired_', keep=2)]
pipr_results <- pipr_results[V1 == 'Accuracy']
pipr_results$Model <- 'PIPR'
colnames(pipr_results) <- c('Dataset', 'Measure', 'Accuracy', 'Model')
all_results <- rbind(all_results, pipr_results[, c('Model', 'Dataset', 'Accuracy')])
# SPRINT
sprint_results <- fread(paste0(sprint_res, 'all_results.tsv'))
sprint_results$Model <- 'SPRINT'
colnames(sprint_results) <- c('Dataset', 'Accuracy', 'AUPR', 'Model')
sprint_results$Dataset[grepl('richoux', file_names, fixed=TRUE)] <- gsub('richoux_*', 'richoux-', sprint_results$Dataset[grepl('richoux', file_names, fixed=TRUE)])
all_results <- rbind(all_results, sprint_results[, c('Model', 'Dataset', 'Accuracy')])
# visualization
all_results <- all_results[, Dataset := factor(Dataset,
levels = c("huang", "guo", "du", "richoux-regular", "richoux-strict", "pan"))]
all_results <- all_results[, Model := factor(Model,
levels=c("RF_PCA","SVM_PCA", "RF_MDS", "SVM_MDS",
"RF_node2vec",  "SVM_node2vec", "SPRINT",
"deepPPI_FC", "deepPPI_LSTM",
"DeepFE", "PIPR"))]
fwrite(all_results, file='results/rewired.csv')
ggplot(all_results, aes(x=Dataset, y = Accuracy, color = Model, group=Model))+
geom_line(size=1, alpha=0.7)+
geom_point(size=3)+
scale_x_discrete(labels=c("huang" = "Huang (4,242)", "guo" = "Guo (7,656)",
"du" = "Du (24,478)", "richoux-regular" = "Richoux regular (33,682)",
"richoux-strict" = "Richoux strict (34,026)", "pan" = "Pan (38,956)")
)+
ylim(0.5, 1.0)+
#scale_y_continuous(limits=c(0.5, 1.0),oob = rescale_none)+
labs(x = "Dataset (n training)", y = "Accuracy/AUC for SPRINT") +
scale_color_manual(values = brewer.pal(12, "Paired")[-11])+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
ggsave("./all_results_rewired.png",height=8, width=12)
ggplot(all_results, aes(x=Dataset, y = Accuracy, color = Model, group=Model))+
geom_line(size=1, alpha=0.7)+
geom_point(size=3)+
scale_x_discrete(labels=c("huang" = "Huang (4,242)", "guo" = "Guo (7,656)",
"du" = "Du (24,478)", "richoux-regular" = "Richoux regular (33,682)",
"richoux-strict" = "Richoux strict (34,026)", "pan" = "Pan (38,956)")
)+
ylim(0.5, 1.0)+
#scale_y_continuous(limits=c(0.5, 1.0),oob = rescale_none)+
labs(x = "Dataset (n training)", y = "Accuracy/AUC for SPRINT") +
scale_color_manual(values = brewer.pal(12, "Paired")[-11])+
theme_bw()+
theme(text = element_text(size=20),axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5))
